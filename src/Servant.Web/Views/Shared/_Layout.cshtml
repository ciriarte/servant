@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>@ViewBag.Title</title>
    <link href="/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/css/metro.blue.css" rel="stylesheet" type="text/css" />
    <link href="/css/metro.extended.css" rel="stylesheet" type="text/css" />
    <link href="/css/base.css" rel="stylesheet" type="text/css" />
</head>
    <body>
        <div class="container" id="application">
            <div class="row">
                <div id="menu" class="span2">
                    <h3 class="white">\\@Model.Page.Servername</h3>
                    
                    <ul class="active-@ViewBag.ActiveMenuItem">
                        <li class="menu-home"><a href="/">Home</a></li>
                        <li class="menu-sites"><a href="/sites/">Sites</a></li>
                        <li class="menu-stats"><a href="/stats/">Stats</a></li>
                        <li class="menu-performance"><a href="#">Performance</a></li>
                        <li class="menu-about"><a href="#">About</a></li>
                    </ul>
                </div>
                <div class="span10" id="content">
                    <div class="padding">
                        @RenderBody()  
                    </div>
                </div>
            </div>
        </div>
    </body>
    <script src="/scripts/jquery-1.8.0.min.js"></script>
    <script src="/Scripts/jquery.uitablefilter.js"></script>
    <script src="/Scripts/base.js" type="text/javascript"></script>
    <script type="text/javascript">
        var errors = @Html.Raw(Model.ErrorsAsJson);

        $(function() {
            for(var error in errors)
            {
                error = errors[error];
                if(!error.IsGlobal) { // property
                    var input = $("input[name=" + error.PropertyName + "]");
                    var group = input.parents(".control-group");
                    group.addClass("error");

                    var helpSpan = group.find("span.help-inline, span.help-block");
                    if(!helpSpan.length) {
                        helpSpan = $('<span class="help-inline"/>');
                        input.parent().append(helpSpan);
                    }
                    helpSpan.text(error.Message);
                    helpSpan.show();
                }
            }
        });
    </script>
    @RenderSection("javascript", false)
</html>
